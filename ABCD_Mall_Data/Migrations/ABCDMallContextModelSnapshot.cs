// <auto-generated />
using System;
using ABCD_Mall_Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ABCD_Mall_Data.Migrations
{
    [DbContext(typeof(ABCDMallContext))]
    partial class ABCDMallContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ABCD_Mall_Data.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("AdminId");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("ABCD_Mall_Data.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ABCD_Mall_Data.Models.Chair", b =>
                {
                    b.Property<int>("ChairId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameChair")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<float>("Price");

                    b.Property<int?>("RoomId");

                    b.Property<byte>("Status");

                    b.HasKey("ChairId");

                    b.HasIndex("RoomId");

                    b.ToTable("Chairs");
                });

            modelBuilder.Entity("ABCD_Mall_Data.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("CustomerName")
                        .HasMaxLength(150);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<byte>("Gender");

                    b.Property<string>("Password");

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("ABCD_Mall_Data.Models.FeedBack", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerId");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.HasKey("FeedbackId");

                    b.HasIndex("CustomerId");

                    b.ToTable("FeedBacks");
                });

            modelBuilder.Entity("ABCD_Mall_Data.Models.Film", b =>
                {
                    b.Property<int>("FilmId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<int?>("GenreId");

                    b.Property<string>("Image");

                    b.Property<DateTime>("ReleaseDate");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("FilmId");

                    b.HasIndex("GenreId");

                    b.ToTable("Films");
                });

            modelBuilder.Entity("ABCD_Mall_Data.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(150);

                    b.HasKey("GenreId");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("ABCD_Mall_Data.Models.Order", b =>
                {
                    b.Property<int>("OrdersId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Count");

                    b.Property<int?>("CustomerId");

                    b.Property<DateTime>("OrderDate");

                    b.Property<string>("TicketId");

                    b.Property<float>("TotalPrice");

                    b.HasKey("OrdersId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("TicketId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ABCD_Mall_Data.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(150);

                    b.Property<int>("TotalChair");

                    b.HasKey("RoomId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("ABCD_Mall_Data.Models.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FilmId");

                    b.Property<int?>("RoomId");

                    b.Property<DateTime>("ShowDate");

                    b.Property<DateTime>("Time");

                    b.HasKey("ScheduleId");

                    b.HasIndex("FilmId");

                    b.HasIndex("RoomId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("ABCD_Mall_Data.Models.Store", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<int?>("CategoryId")
                        .IsRequired();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.Property<string>("image");

                    b.HasKey("StoreId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("ABCD_Mall_Data.Models.Ticket", b =>
                {
                    b.Property<string>("TicketId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ChairId");

                    b.Property<int?>("ScheduleId");

                    b.HasKey("TicketId");

                    b.HasIndex("ChairId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("ABCD_Mall_Data.Models.Chair", b =>
                {
                    b.HasOne("ABCD_Mall_Data.Models.Room", "Rooms")
                        .WithMany("Chairs")
                        .HasForeignKey("RoomId");
                });

            modelBuilder.Entity("ABCD_Mall_Data.Models.FeedBack", b =>
                {
                    b.HasOne("ABCD_Mall_Data.Models.Customer", "Customer")
                        .WithMany("FeedBacks")
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("ABCD_Mall_Data.Models.Film", b =>
                {
                    b.HasOne("ABCD_Mall_Data.Models.Genre", "Genres")
                        .WithMany("Films")
                        .HasForeignKey("GenreId");
                });

            modelBuilder.Entity("ABCD_Mall_Data.Models.Order", b =>
                {
                    b.HasOne("ABCD_Mall_Data.Models.Customer", "Customers")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId");

                    b.HasOne("ABCD_Mall_Data.Models.Ticket", "Tickets")
                        .WithMany("Orders")
                        .HasForeignKey("TicketId");
                });

            modelBuilder.Entity("ABCD_Mall_Data.Models.Schedule", b =>
                {
                    b.HasOne("ABCD_Mall_Data.Models.Film", "Films")
                        .WithMany("Schedules")
                        .HasForeignKey("FilmId");

                    b.HasOne("ABCD_Mall_Data.Models.Room", "Rooms")
                        .WithMany("Schedules")
                        .HasForeignKey("RoomId");
                });

            modelBuilder.Entity("ABCD_Mall_Data.Models.Store", b =>
                {
                    b.HasOne("ABCD_Mall_Data.Models.Category", "Categories")
                        .WithMany("Stores")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ABCD_Mall_Data.Models.Ticket", b =>
                {
                    b.HasOne("ABCD_Mall_Data.Models.Chair", "Chairs")
                        .WithMany()
                        .HasForeignKey("ChairId");

                    b.HasOne("ABCD_Mall_Data.Models.Schedule", "Schedules")
                        .WithMany()
                        .HasForeignKey("ScheduleId");
                });
#pragma warning restore 612, 618
        }
    }
}
